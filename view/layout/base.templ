package layout

import (
    "suchicodes-go/view/utils"
    "suchicodes-go/view/components"
)

type BaseProps struct {
    Title string
    Styles []string
    Scripts []string
}

templ Base(props BaseProps) {
    <html lang="en">
        <head>
            if props.Title != "" {
                <title>{ props.Title }</title>
            } else {
                <title>Suchicodes</title>
            }
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            
            <link rel="icon" href="/static/assets/favicon.svg"/>

            <link rel="stylesheet" href="/static/styles/base.css" class="css"/>
            for _, css := range props.Styles {
                <link rel="stylesheet" href={"/static/styles/"+css} class="css"/>
            }

            if utils.GetCurrentTheme(ctx) != "dark" {
                <link id="theme-css" data-theme="light" rel="stylesheet" href="/static/styles/colors-light.css" class="css"/>
            } else {
                <link id="theme-css" data-theme="dark" rel="stylesheet" href="/static/styles/colors-dark.css" class="css"/>
            }
            <link rel="stylesheet" href="/static/styles/components/navbar.css" class="css"/>
            <link rel="stylesheet" href="/static/styles/components/footer.css" class="css"/>

            // Must come before anything that depends on change theme
            <script src="/static/scripts/base.js" defer></script>
            <script src="/static/scripts/change-theme.js" defer></script>
            <script src="/static/scripts/components/footer.js" defer></script>
            for _, script := range props.Scripts {
                <script src={"/static/scripts/"+script} defer></script>
            }
        </head>
        <body>
            @components.Navbar(utils.GetCurrentTheme(ctx))
            <hr class="nav-separator"/>
            <div class="container">
                { children... }
            </div>
            @components.Footer(utils.GetCurrentTheme(ctx))
        </body>
    </html>
}
